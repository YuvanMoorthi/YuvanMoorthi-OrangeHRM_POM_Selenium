package com.orangehrm.qa.testcases;

import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.orangehrm.qa.base.SeleniumBase;
import com.orangehrm.qa.pages.DashboardPage;
import com.orangehrm.qa.pages.LoginPage;
import com.orangehrm.qa.pages.SupportPage;

public class SupportPageTest extends SeleniumBase {
	LoginPage loginpage;
	DashboardPage dashboardpage;
	SupportPage supportpage;

	public SupportPageTest() {
		super();
	}

	// -----------------To Initiate browser------------------------
	@BeforeMethod
	public void SetUp() {
		log.info("Initializing the browser and launching the application");
		initialization();
		loginpage = new LoginPage();
		log.info("Logging in with credentials");
		dashboardpage = loginpage.enterLoginCredentials(prop.getProperty("username"), prop.getProperty("password"));
		log.info("Login successful, navigating to support page");
		supportpage = dashboardpage.headerDropdownSupport();
	}

	@Test(priority = 1)
	public void supportDescriptionTest() {
		log.info("Verifying the description on the Support page");
		boolean supportDescription = supportpage.supportDescription();
		Assert.assertTrue(supportDescription, "Description of the support page is not displayed");
		log.info("Support page description displayed: " + supportDescription);
	}

	@Test(priority = 2)
	public void supportInformationTest() {
		log.info("Verifying the information on the Support page");
		boolean supportInformation = supportpage.supportInformation();
		Assert.assertTrue(supportInformation, "Information of the support page is not displayed");
		log.info("Support page information displayed: " + supportInformation);
	}

	@Test(priority = 3)
	public void supportConnactSupportTest() {
		log.info("Verifying the contact support section on the Support page");
		boolean supportConnactSupport = supportpage.supportConnactSupport();
		Assert.assertTrue(supportConnactSupport, "Contact support section of the support page is not displayed");
		log.info("Support contact section displayed: " + supportConnactSupport);
	}

	@Test(priority = 4)
	public void supportversionTest() {
		log.info("Verifying the version information on the Support page");
		boolean supportversion = supportpage.supportversion();
		Assert.assertTrue(supportversion, "Version of the support page is not displayed");
		log.info("Support page version displayed: " + supportversion);
	}

	@Test(priority = 5)
	public void supportCopyrightsTest() {
		log.info("Verifying the copyrights information on the Support page");
		boolean supportCopyrights = supportpage.supportCopyrights();
		Assert.assertTrue(supportCopyrights, "Copyrights of the support page is not displayed");
		log.info("Support page copyrights displayed: " + supportCopyrights);
	}

	@Test(priority = 6)
	public void supportMainWebsiteTest() {
		log.info("Clicking on the main website link from the Support page");
		supportpage.supportMainWebsite();
		testutil.switchToWindowByIndex(driver, 1);
		boolean supportMainWebsiteLogo = supportpage.SupportMainWebsiteLogo();
		Assert.assertTrue(supportMainWebsiteLogo, "orangeHRM main website did not navigate to the main page");
		log.info("Switched to the main website window and verified the logo");
		driver.close();
		testutil.switchToWindowByIndex(driver, 0);
		boolean supportDescription = supportpage.supportDescription();
		Assert.assertTrue(supportDescription,
				"After closing the new window, the driver did not return to the parent window");
		log.info("Successfully returned to the parent window and verified the support description");
	}

	// ------------------------------To Quit Browser------------------------------
	@AfterMethod
	public void tearDown() {
		log.info("Test execution complete. Closing the browser");
		try {
			if (driver != null) {
				driver.quit();
				log.info("Browser closed successfully");
			}
		} catch (Exception e) {
			log.error("Error while closing the browser: " + e.getMessage());
			e.printStackTrace();
		}
	}
}
