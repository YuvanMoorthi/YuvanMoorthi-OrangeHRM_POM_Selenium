package com.orangehrm.qa.testcases;

import com.orangehrm.qa.base.SeleniumBase;

public class ForgotPasswordPageTest extends SeleniumBase {
	ForgotPasswordPage forgotpasswordpage;
	LoginPage loginpage;

	public ForgotPasswordPageTest() {
		super();
	}

	// --------------------To Initiate browser------------------------
	@BeforeMethod
	public void setUp() {
		log.info("Initializing the browser and launching the application");
		initialization();
		loginpage = new LoginPage();
		log.info("Clicking on the 'Forgot Password' link");
		forgotpasswordpage = loginpage.clickOnForgotPasswordLink();
		log.info("Navigated to the Forgot Password page");
	}

	@Test(priority = 1)
	public void headerResetPasswordTest() {
		log.info("Verifying the header on the Forgot Password page");
		boolean headerResetPassword = forgotpasswordpage.headerResetPassword();
		assertTrue(headerResetPassword, "Header of the Forgot Password page is not displayed");
		log.info("Forgot Password page header displayed: " + headerResetPassword);
	}

	@Test(priority = 2)
	public void descriptionTextTest() {
		log.info("Verifying the description text on the Forgot Password page");
		boolean descriptionText = forgotpasswordpage.descriptionText();
		assertTrue(descriptionText, "Description of the Forgot Password page is not displayed");
		log.info("Forgot Password page description displayed: " + descriptionText);
	}

	@Test(priority = 3)
	public void iconPersonTest() {
		log.info("Verifying the person icon on the Forgot Password page");
		boolean iconPerson = forgotpasswordpage.iconPerson();
		assertTrue(iconPerson, "Person icon on the Forgot Password page is not displayed");
		log.info("Person icon displayed: " + iconPerson);
	}

	@Test(priority = 4)
	public void labelUsernameTest() {
		log.info("Verifying the username label on the Forgot Password page");
		boolean labelUsername = forgotpasswordpage.labelUsername();
		assertTrue(labelUsername, "Username label on the Forgot Password page is not displayed");
		log.info("Username label displayed: " + labelUsername);
	}

	@Test(priority = 5)
	public void labelVersionTest() {
		log.info("Verifying the version label on the Forgot Password page");
		boolean labelVersion = forgotpasswordpage.labelVersion();
		assertTrue(labelVersion, "Version label on the Forgot Password page is not displayed");
		log.info("Version label displayed: " + labelVersion);
	}

	@Test(priority = 6)
	public void clickCancelButtonTest() {
		log.info("Clicking the Cancel button on the Forgot Password page");
		forgotpasswordpage.clickCancelButton();
		boolean validateLogoHeader = loginpage.validateLogoHeader();
		assertTrue(validateLogoHeader, "Cancel button on the Forgot Password page is not working");
		log.info("Successfully navigated back to the Login page after clicking Cancel button");
	}

	@Test(priority = 7)
	public void clickResetButtonTest() {
		log.info("Clicking the Reset button on the Forgot Password page without entering username");
		forgotpasswordpage.clickResetButton();
		boolean requiredMessage = forgotpasswordpage.requiredMessage();
		assertTrue(requiredMessage, "Required message for username not displayed when clicking the Reset button");

		log.info("Entering a username to reset password");
		forgotpasswordpage.enterUsername(prop.getProperty("username"));

		boolean resetPasswordLink = forgotpasswordpage.resetPasswordLink();
		assertTrue(resetPasswordLink, "Reset password page is not displayed when clicking the Reset button");
		log.info("Navigated to Reset Password page successfully");
	}

	@Test(priority = 8)
	public void enterUsernameTest() {
		log.info("Entering username and clicking the Reset button");
		forgotpasswordpage.enterUsername(prop.getProperty("username"));
		forgotpasswordpage.clickResetButton();

		boolean resetPasswordLink = forgotpasswordpage.resetPasswordLink();
		assertTrue(resetPasswordLink, "Reset password page is not displayed when clicking the Reset button");
		log.info("Navigated to Reset Password page successfully after entering username");
	}

	@Test(priority = 9)
	public void clickMainPageLinkTest() {
		log.info("Clicking the main page link on the Forgot Password page");
		forgotpasswordpage.clickMainPageLink();
		testutil.switchToWindowByIndex(driver, 1);
		boolean logoMainPage = forgotpasswordpage.logoMainPage();
		assertTrue(logoMainPage, "Main OrangeHRM website logo is not displayed when clicking the main website link");
		log.info("Main OrangeHRM website logo displayed: " + logoMainPage);

		driver.close();
		testutil.switchToWindowByIndex(driver, 0);

		boolean headerResetPassword = forgotpasswordpage.headerResetPassword();
		assertTrue(headerResetPassword,
				"Header of the Forgot Password page is not displayed after returning from the main page");
		log.info("Returned to Forgot Password page and verified header");
	}

	// ------------------------------To Quit Browser------------------------------
	@AfterMethod
	public void tearDown() {
		log.info("Test execution complete. Closing the browser");
		try {
			if (driver != null) {
				driver.quit();
				log.info("Browser closed successfully");
			}
		} catch (Exception e) {
			log.error("Error while closing the browser: " + e.getMessage());
			e.printStackTrace();
		}
	}
}
