package com.orangehrm.qa.testcases;

import com.orangehrm.qa.base.SeleniumBase;

public class AboutPageTest extends SeleniumBase{
	LoginPage loginpage;
	DashboardPage dashboardpage;
	AboutPage aboutpage;

	public AboutPageTest() {
		super();
	}

	// --------------------To Initiate browser------------------------
	@BeforeMethod
	public void SetUp() {
		log.info("Initializing the browser and launching the application");
		initialization();
		log.info("Login credentials: Username = " + prop.getProperty("username") + ", Password = ********");
		loginpage = new LoginPage();
		dashboardpage = loginpage.enterLoginCredentials(prop.getProperty("username"), prop.getProperty("password"));
		aboutpage = dashboardpage.headerDropdownAbout();
		log.info("Navigated to the About page");
	}

	@Test(priority = 1)
	public void aboutHeaderTest() {
		log.info("Verifying that the About page header is displayed");
		boolean aboutHeader = aboutpage.aboutHeader();
		Assert.assertTrue(aboutHeader, "Header of the About page is not displayed");
		log.info("About page header visibility: " + aboutHeader);
	}

	@Test(priority = 2)
	public void aboutCompanyNameTest() {
		log.info("Verifying that the company name is displayed on the About page");
		boolean aboutCompanyName = aboutpage.aboutCompanyName();
		Assert.assertTrue(aboutCompanyName, "Company name on the About page is not displayed");
		log.info("About page company name visibility: " + aboutCompanyName);
	}

	@Test(priority = 3)
	public void aboutVersionTest() {
		log.info("Verifying that the version is displayed on the About page");
		boolean aboutVersion = aboutpage.aboutVersion();
		Assert.assertTrue(aboutVersion, "Version on the About page is not displayed");
		log.info("About page version visibility: " + aboutVersion);
	}

	@Test(priority = 4)
	public void aboutActiveEmployeesTest() {
		log.info("Verifying that the active employees count is displayed on the About page");
		boolean aboutActiveEmployees = aboutpage.aboutActiveEmployees();
		Assert.assertTrue(aboutActiveEmployees, "Active employees count on the About page is not displayed");
		log.info("About page active employees visibility: " + aboutActiveEmployees);
	}

	@Test(priority = 5)
	public void aboutEmployeesTerminatedTest() {
		log.info("Verifying that the terminated employees count is displayed on the About page");
		boolean aboutEmployeesTerminated = aboutpage.aboutEmployeesTerminated();
		Assert.assertTrue(aboutEmployeesTerminated, "Terminated employees count on the About page is not displayed");
		log.info("About page terminated employees visibility: " + aboutEmployeesTerminated);
	}

	@Test(priority = 6)
	public void aboutCompanyNameValueTest() {
		log.info("Verifying that the company name value is displayed on the About page");
		boolean aboutCompanyNameValue = aboutpage.aboutCompanyNameValue();
		Assert.assertTrue(aboutCompanyNameValue, "Company name value on the About page is not displayed");
		log.info("About page company name value visibility: " + aboutCompanyNameValue);
	}

	@Test(priority = 7)
	public void aboutVersionValueTest() {
		log.info("Verifying that the version value is displayed on the About page");
		boolean aboutVersionValue = aboutpage.aboutVersionValue();
		Assert.assertTrue(aboutVersionValue, "Version value on the About page is not displayed");
		log.info("About page version value visibility: " + aboutVersionValue);
	}

	@Test(priority = 8)
	public void aboutActiveEmployeesValueTest() {
		log.info("Verifying that the active employees value is displayed on the About page");
		boolean aboutActiveEmployeesValue = aboutpage.aboutActiveEmployeesValue();
		Assert.assertTrue(aboutActiveEmployeesValue, "Active employees value on the About page is not displayed");
		log.info("About page active employees value visibility: " + aboutActiveEmployeesValue);
	}

	@Test(priority = 9)
	public void aboutEmployeesTerminatedValueTest() {
		log.info("Verifying that the terminated employees value is displayed on the About page");
		boolean aboutEmployeesTerminatedValue = aboutpage.aboutEmployeesTerminatedValue();
		Assert.assertTrue(aboutEmployeesTerminatedValue,
				"Terminated employees value on the About page is not displayed");
		log.info("About page terminated employees value visibility: " + aboutEmployeesTerminatedValue);
	}

	// ------------------------------To Quit Browser------------------------------
	@AfterMethod
	public void tearDown() {
		log.info("Test execution complete. Closing the browser.");
		try {
			if (driver != null) {
				driver.quit();
				log.info("Browser closed successfully");
			}
		} catch (Exception e) {
			log.error("Error while closing the browser: " + e.getMessage());
			e.printStackTrace();
		}
	}
}
